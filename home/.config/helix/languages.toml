[[language]]
name = "bash"
auto-format = true

[[language]]
name = "comment"
auto-format = true

[[language]]
name = "css"
auto-format = true
formatter = { command = 'prettier', args = ["--parser", "css"] }

[[language]]
name = "git-attributes"
auto-format = true

[[language]]
name = "git-commit"
auto-format = true

[[language]]
name = "git-config"
auto-format = true

[[language]]
name = "git-ignore"
auto-format = true

[[language]]
name = "git-rebase"
auto-format = true

[[language]]
name = "html"
auto-format = true
formatter = { command = 'prettier', args = ["--parser", "html"] }

[[language]]
name = "javascript"
auto-format = true
formatter = { command = 'prettier', args = ["--parser", "typescript"] }

[[language]]
file-types = ["json", "hjson", "ndjson"]
name = "json"
auto-format = true
formatter = { command = 'prettier', args = ["--parser", "json"] }

[[language]]
name = "lua"
auto-format = true

[[language]]
name = "markdown"
auto-format = true
formatter = { command = 'prettier', args = ["--parser", "markdown"] }

[[language]]
name = "rust"
language-servers = ["rust-analyzer"]

[[language]]
name = "toml"
auto-format = true

[language-server.efm]
command = "efm-langserver"

[[language]]
name = "typescript"
auto-format = true
language-servers = [
  { name = "efm", only-features = [
    "diagnostics",
    "format",
  ] },
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }

[[language]]
name = "tsx"
auto-format = true
language-servers = [
  { name = "efm", only-features = [
    "diagnostics",
    "format",
  ] },
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }

[[language]]
name = "xml"
auto-format = true

[[language]]
name = "yaml"
auto-format = true
formatter = { command = 'prettier', args = ["--parser", "yaml"] }

[language-server.rust-analyzer]
config.check.command = "clippy"
config.checkOnSave.command = "clippy"
config.completion.autoimport.enable = true
config.imports.granularity.enforce = true
config.imports.granularity.group = "item"
config.imports.prefix = "crate"
config.lens.debug.enable = false
config.lens.implementations.enable = false
config.lens.run.enable = false
config.showUnlinkedFileNotification = false
config.cargo.extraArgs = ["--profile", "rust-analyzer"]
config.cargo.extraEnv = { "CARGO_PROFILE_RUST_ANALYZER_INHERITS" = "dev" }
